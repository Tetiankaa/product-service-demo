<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.2</version>
        <relativePath/>
    </parent>

    <groupId>org.example</groupId>
    <artifactId>product-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <name>Product Service</name>
    <description>Example of Product Service using OpenAPI specification</description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>

        <jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
        <swagger-annotations.version>2.2.20</swagger-annotations.version>

        <openapi-generator.version>7.2.0</openapi-generator.version>

        <product-service-openapi-spec.path>
            ${project.basedir}/src/main/resources/specification/product-service.openapi.yml
        </product-service-openapi-spec.path>

        <product-service-asyncapi.path>
            ${project.basedir}/src/main/resources/specification/product-service.asyncapi.yml
        </product-service-asyncapi.path>

        <api-package>org.example.rest</api-package>
        <zenwave.version>1.4.1</zenwave.version>

    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>6.3.2.Final</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>

        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-databind-nullable.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-kafka</artifactId>
            <version>4.1.0</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>

                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <dependency>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok-mapstruct-binding.version}</version>
                        </dependency>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <compilerArg>
                            -Amapstruct.defaultComponentModel=spring
                        </compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi-generator.version}</version> <!-- important for Spring Boot 3.x -->
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>

                        <id>generate-api</id>

                        <configuration>
                            <!-- Specifies the path to the OpenAPI specification file -->
                            <inputSpec>${product-service-openapi-spec.path}</inputSpec>

                            <!--https://openapi-generator.tech/docs/generators/spring -->

                            <!-- indicating that code will be generated for the Spring framework -->
                            <generatorName>spring</generatorName>
                            <library>spring-boot</library>

                            <modelNameSuffix>Dto</modelNameSuffix>
                            <generateApis>true</generateApis>
                            <generateModels>true</generateModels>

                            <!-- ... a lot of other parameters here if needed -->

                            <!-- configuration options for the code generation process -->
                            <configOptions>
                                <interfaceOnly>true</interfaceOnly>
                                <useBeanValidation>true</useBeanValidation>
                                <performBeanValidation>true</performBeanValidation>
                                <modelPackage>${api-package}.model</modelPackage>
                                <apiPackage>${api-package}.controller</apiPackage>
                                <useJakartaEe>true</useJakartaEe> <!-- important for Spring Boot 3.x -->
                                <useSpringBoot3>true</useSpringBoot3> <!-- important for Spring Boot 3.x -->
                                <sourceFolder>/src/main/java</sourceFolder>
                                <implFolder>/src/main/java</implFolder>
                                <serializableModel>true</serializableModel>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.github.zenwave360.zenwave-sdk</groupId>
                <artifactId>zenwave-sdk-maven-plugin</artifactId>
                <version>1.4.1</version>

                <configuration>
                    <addCompileSourceRoot>true</addCompileSourceRoot>
                    <addTestCompileSourceRoot>true</addTestCompileSourceRoot>
                </configuration>

                <executions>
                    <execution>
                        <id>generate-asyncapi-dtos</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>

                        <configuration>
                            <!-- It automates the process of generating Java classes from JSON Schema definitions-->
                            <generatorName>jsonschema2pojo</generatorName>
                            <inputSpec>${product-service-asyncapi.path}</inputSpec>
                            <configOptions>
                                <modelPackage>org.example.event.model</modelPackage>
                                <jsonschema2pojo.useJakartaValidation>true</jsonschema2pojo.useJakartaValidation>
                                <jsonschema2pojo.includeJsr303Annotations>false</jsonschema2pojo.includeJsr303Annotations>
                            </configOptions>
                        </configuration>
                    </execution>

                    <execution>
                        <id>generate-asyncapi</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatorName>spring-cloud-streams3</generatorName>
                            <inputSpec>${product-service-asyncapi.path}</inputSpec>

                            <configOptions>
                                <role>provider</role>
                                <style>imperative</style>
                                <apiPackage>org.example.event.api</apiPackage>
                                <modelPackage>org.example.event.model</modelPackage>
                                <operationIds>sendProductCreated</operationIds>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>
                        <artifactId>asyncapi-spring-cloud-streams3</artifactId>
                        <version>1.4.1</version>
                    </dependency>
                    <dependency>
                        <groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>
                        <artifactId>asyncapi-jsonschema2pojo</artifactId>
                        <version>1.4.1</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>